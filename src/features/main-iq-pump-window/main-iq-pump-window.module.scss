@use './../../shared/styles/variable/globalIndex';
@use './../../shared/styles/variable/global';
@use './../../shared/styles/mixins';
@use './../../shared/styles/variable/common';
@use 'sass:color';


  .overlay {
    display: flex;
    min-width: 100vw;
    min-height: 100%;
    margin: 0 auto;
    justify-content: center;
  }

.cover {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-bottom: mixins.rem(40);
  padding-left: mixins.rem(20);
  padding-right: mixins.rem(20);
  row-gap: mixins.rem(40);
  box-sizing: border-box;
  overflow-y: scroll;
    background-color:  #2f164b;

  @media (min-width: mixins.em(global.$mobile)) {
    height: 98%;
    max-width: 100%;
    position: relative;
    width: auto;
    aspect-ratio: 9 / 16;
    border-radius: mixins.rem(15);
  }

  @media (max-width: mixins.em(global.$mobile)) {
    position: relative;
    min-width: 100%;
    min-height: 100%;
  }

  @media (max-width: mixins.em(global.$mobile)) {
    padding-left: mixins.rem(10);
    padding-right: mixins.rem(10);
  }

  @media (max-width: mixins.em(450)) {
    min-height: 98vh;
  }

}

.notification_actions_btn {
  display: flex;
  column-gap: mixins.rem(20);
  justify-content: space-between;
  font-weight: 900;
  padding-right: mixins.rem(10);
  padding-left: mixins.rem(10);
  padding-top: mixins.rem(20);
  min-width: 100%;
  align-items: center;

  @include mixins.adaptiveValue('padding-left', 10, 10, 3, 500, 400);
}


.btn_connect_login {
  background-color: globalIndex.$background_colour_main;
  color: #2F164B;
  border: none;
  cursor: pointer;
  box-shadow: mixins.rem(0) mixins.rem(0) mixins.rem(10) rgba(0, 0, 0, 0.2);
  transition:
          background-color ease 0.3s,
          box-shadow ease 0.3s;

  font-size: mixins.rem(16);
  font-weight: 700;
  border-radius: mixins.rem(40);

  min-height: mixins.rem(50);
  padding-top: mixins.rem(10);
  padding-bottom: mixins.rem(10);
  padding-left: mixins.rem(28);
  padding-right: mixins.rem(28);


  @media (any-hover: hover) {
    &:hover {
      background-color: color.adjust(globalIndex.$btn_background_hover, $lightness: -10%);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      transition:
              background-color ease 0.3s,
              box-shadow ease 0.3s;
    }
  }

}

.wrapper_btn {
  min-height: 100%;
  display: flex;
}

.btn_stt {
  width: mixins.rem(25);
  min-height: 100%;
  height: mixins.rem(50);
  display: flex;
  align-items: center;
  justify-content: center;
}

.icon_check {
  width: mixins.rem(25);
}

.icon_notifications {
  width: mixins.rem(25);
}

.select_chosen_value {
  display: flex;
  width: mixins.rem(30);
  height: mixins.rem(30);
  object-fit: cover;
  overflow: hidden;
  border-radius: 50%;
  cursor: pointer;
}

.selet_list {
  font-weight: 600;
  color: #ffffff;
  display: flex;
  flex-direction: column;
  position: absolute;
  border-radius: 0;
  left: 0;
  top: 0;
  opacity: 0;
  z-index: 500;
  pointer-events: none;
  transform: translate(mixins.rem(-4), mixins.rem(-4));
  width: mixins.rem(140);
  row-gap: mixins.rem(5);
  transition: transform ease 0.3s 0s, opacity ease 0.3s 0s;
  &.select_show_list {
    transform: translate(mixins.rem(-4), mixins.rem(40));
    transition: transform ease 0.3s 0s, opacity ease 0.3s 0s;
    opacity: 1;
    pointer-events: auto;
  }
}



.icon {
  border-radius: 50%;
  width: mixins.rem(30);
  height: mixins.rem(30);
  border-radius: 50%;
  object-fit: contain;
  color: #ffffff;
}

.select_wrap {
  display: flex;
  position: relative;
  align-self: center;
  justify-content: center;
}

.select_option {
  display: flex;
}

.bllock_list {
  background-color: rgba(255, 255, 255, 0.6);
  display: flex;
  width: mixins.rem(140);
  height: mixins.rem(40);
  column-gap: mixins.rem(10);
  cursor: pointer;
  align-items: center;
  border-radius: mixins.rem(60);
  padding-left: mixins.rem(5);
  padding-right: mixins.rem(5);
}

.cover_btns {
  display: flex;
  color: #2F164B;
  align-items: center;
  column-gap: mixins.rem(40);
  justify-content: space-between;
  //max-width: mixins.rem(240);
  position: relative;
  z-index: 10000;
  @include mixins.adaptiveValue('column-gap', 40, 20, 3, 400, 320);

  @media (max-width: mixins.em(350)) {
    //max-width: mixins.rem(200);
    //min-width: mixins.rem(200);
  }

}